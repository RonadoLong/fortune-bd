pipeline{
    agent {
          label 'agent-linux-01'
    }
    // 允许颜色输出
    options {
      ansiColor('xterm')
    }
    environment{
        HARBOR_HOST= '192.168.3.30'
        K8S_NAMESPACE='develop'
    }
    parameters {
        string(name: 'PROJECT_NAME', defaultValue: 'api-gateway', description: 'project name,same as the name ofdocker container')
        string(name: 'CONTAINER_VERSION', defaultValue: '', description: 'docker container version number, SET when major version number changed')
        booleanParam(name: 'DEPLOYMENT_K8S', defaultValue: true, description: 'release deployment k8s')
    }
    stages {
        stage('Initial') {
            steps{
                script {
                        env.DOCKER_IMAGE='develop/${PROJECT_NAME}'
                          // 脚本式创建一个环境变量
                        if (params.CONTAINER_VERSION == ''){
                            env.APP_VERSION = sh(returnStdout:true,script:"jenkins-build-tools gen -p ${params.PROJECT_NAME}").trim()
                        }else {
                            env.APP_VERSION ="${params.CONTAINER_VERSION}-alpha"
                        }
                        sh "echo ${env.APP_VERSION}"
                    }
                }
        }
        stage("Docker Build") {
            when {
                allOf {
                    expression { env.APP_VERSION != null }
                }
            }
            steps("Start Build") {
                sh "./build.sh"
            }

        }
        stage("Deploy") {
            when {
                allOf {
                    expression { env.APP_VERSION != null }
                }
            }
            steps("Deploy to kubernetes") {
                script {
                    if (params.DEPLOYMENT_K8S) {
                        sh "./deploy.sh"
                    }
                }
            }
        }
    }
    post {
        failure {
//             emailext (
//                 subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
//                 body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
//                     <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
//                 to: "chenbin@flyele.net,wuzizhou@flyele.net",
//                 from: "flyele@flyele.net"
//             )
        }
    }
}



