// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/exchange/v1/exchange.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type StrategyProfitCompensateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrategyId string  `protobuf:"bytes,1,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Price      float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *StrategyProfitCompensateReq) Reset() {
	*x = StrategyProfitCompensateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyProfitCompensateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyProfitCompensateReq) ProtoMessage() {}

func (x *StrategyProfitCompensateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyProfitCompensateReq.ProtoReflect.Descriptor instead.
func (*StrategyProfitCompensateReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *StrategyProfitCompensateReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *StrategyProfitCompensateReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type SymbolWithRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	RateYear string `protobuf:"bytes,2,opt,name=rate_year,json=rateYear,proto3" json:"rate_year,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SymbolWithRate) Reset() {
	*x = SymbolWithRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolWithRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolWithRate) ProtoMessage() {}

func (x *SymbolWithRate) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolWithRate.ProtoReflect.Descriptor instead.
func (*SymbolWithRate) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *SymbolWithRate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SymbolWithRate) GetRateYear() string {
	if x != nil {
		return x.RateYear
	}
	return ""
}

func (x *SymbolWithRate) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SymbolRankWithRateYearResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SymbolWithRate `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SymbolRankWithRateYearResp) Reset() {
	*x = SymbolRankWithRateYearResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolRankWithRateYearResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRankWithRateYearResp) ProtoMessage() {}

func (x *SymbolRankWithRateYearResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRankWithRateYearResp.ProtoReflect.Descriptor instead.
func (*SymbolRankWithRateYearResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *SymbolRankWithRateYearResp) GetData() []*SymbolWithRate {
	if x != nil {
		return x.Data
	}
	return nil
}

type AssertsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asserts       string `protobuf:"bytes,1,opt,name=asserts,proto3" json:"asserts,omitempty"`
	Profit        string `protobuf:"bytes,2,opt,name=profit,proto3" json:"profit,omitempty"`
	ProfitPercent string `protobuf:"bytes,3,opt,name=profit_percent,json=profitPercent,proto3" json:"profit_percent,omitempty"`
}

func (x *AssertsResp) Reset() {
	*x = AssertsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssertsResp) ProtoMessage() {}

func (x *AssertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssertsResp.ProtoReflect.Descriptor instead.
func (*AssertsResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *AssertsResp) GetAsserts() string {
	if x != nil {
		return x.Asserts
	}
	return ""
}

func (x *AssertsResp) GetProfit() string {
	if x != nil {
		return x.Profit
	}
	return ""
}

func (x *AssertsResp) GetProfitPercent() string {
	if x != nil {
		return x.ProfitPercent
	}
	return ""
}

type TradeSymbolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Coin     string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *TradeSymbolReq) Reset() {
	*x = TradeSymbolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeSymbolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeSymbolReq) ProtoMessage() {}

func (x *TradeSymbolReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeSymbolReq.ProtoReflect.Descriptor instead.
func (*TradeSymbolReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{4}
}

func (x *TradeSymbolReq) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *TradeSymbolReq) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	State    int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	Unit     string `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	Price    string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Change   string `protobuf:"bytes,6,opt,name=change,proto3" json:"change,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{5}
}

func (x *Symbol) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Symbol) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Symbol) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Symbol) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Symbol) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Symbol) GetChange() string {
	if x != nil {
		return x.Change
	}
	return ""
}

type GetSymbolsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []*Symbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *GetSymbolsResp) Reset() {
	*x = GetSymbolsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSymbolsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolsResp) ProtoMessage() {}

func (x *GetSymbolsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolsResp.ProtoReflect.Descriptor instead.
func (*GetSymbolsResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{6}
}

func (x *GetSymbolsResp) GetSymbols() []*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type ExChangeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchanges []byte `protobuf:"bytes,1,opt,name=exchanges,proto3" json:"exchanges,omitempty"`
}

func (x *ExChangeList) Reset() {
	*x = ExChangeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExChangeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExChangeList) ProtoMessage() {}

func (x *ExChangeList) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExChangeList.ProtoReflect.Descriptor instead.
func (*ExChangeList) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{7}
}

func (x *ExChangeList) GetExchanges() []byte {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

type UserApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ApiId  int64  `protobuf:"varint,2,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
}

func (x *UserApiReq) Reset() {
	*x = UserApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApiReq) ProtoMessage() {}

func (x *UserApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApiReq.ProtoReflect.Descriptor instead.
func (*UserApiReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{8}
}

func (x *UserApiReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserApiReq) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type UserApiKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ApiKey string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *UserApiKeyReq) Reset() {
	*x = UserApiKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserApiKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserApiKeyReq) ProtoMessage() {}

func (x *UserApiKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserApiKeyReq.ProtoReflect.Descriptor instead.
func (*UserApiKeyReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{9}
}

func (x *UserApiKeyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserApiKeyReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ExchangeApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ExchangeId int64  `protobuf:"varint,2,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	ApiKey     string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Secret     string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Passphrase string `protobuf:"bytes,5,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *ExchangeApi) Reset() {
	*x = ExchangeApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeApi) ProtoMessage() {}

func (x *ExchangeApi) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeApi.ProtoReflect.Descriptor instead.
func (*ExchangeApi) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{10}
}

func (x *ExchangeApi) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExchangeApi) GetExchangeId() int64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *ExchangeApi) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ExchangeApi) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ExchangeApi) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type ExchangeApiResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ExchangeId   int64  `protobuf:"varint,2,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	ExchangeName string `protobuf:"bytes,3,opt,name=exchange_name,json=exchangeName,proto3" json:"exchange_name,omitempty"`
	ApiKey       string `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Secret       string `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	Passphrase   string `protobuf:"bytes,6,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *ExchangeApiResp) Reset() {
	*x = ExchangeApiResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeApiResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeApiResp) ProtoMessage() {}

func (x *ExchangeApiResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeApiResp.ProtoReflect.Descriptor instead.
func (*ExchangeApiResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeApiResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExchangeApiResp) GetExchangeId() int64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *ExchangeApiResp) GetExchangeName() string {
	if x != nil {
		return x.ExchangeName
	}
	return ""
}

func (x *ExchangeApiResp) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ExchangeApiResp) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ExchangeApiResp) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type UpdateExchangeApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ExchangeId int64  `protobuf:"varint,2,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	ApiKey     string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Secret     string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Passphrase string `protobuf:"bytes,5,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	ApiId      int64  `protobuf:"varint,6,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
}

func (x *UpdateExchangeApiReq) Reset() {
	*x = UpdateExchangeApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExchangeApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExchangeApiReq) ProtoMessage() {}

func (x *UpdateExchangeApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExchangeApiReq.ProtoReflect.Descriptor instead.
func (*UpdateExchangeApiReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateExchangeApiReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateExchangeApiReq) GetExchangeId() int64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *UpdateExchangeApiReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *UpdateExchangeApiReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *UpdateExchangeApiReq) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *UpdateExchangeApiReq) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type GetExApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
}

func (x *GetExApiReq) Reset() {
	*x = GetExApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExApiReq) ProtoMessage() {}

func (x *GetExApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExApiReq.ProtoReflect.Descriptor instead.
func (*GetExApiReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{13}
}

func (x *GetExApiReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExApiResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExApiList []byte `protobuf:"bytes,1,opt,name=ex_api_list,json=exApiList,proto3" json:"ex_api_list,omitempty"`
}

func (x *ExApiResp) Reset() {
	*x = ExApiResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExApiResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExApiResp) ProtoMessage() {}

func (x *ExApiResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExApiResp.ProtoReflect.Descriptor instead.
func (*ExApiResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{14}
}

func (x *ExApiResp) GetExApiList() []byte {
	if x != nil {
		return x.ExApiList
	}
	return nil
}

type GetTradeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	PageNum    int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize   int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetTradeListReq) Reset() {
	*x = GetTradeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeListReq) ProtoMessage() {}

func (x *GetTradeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeListReq.ProtoReflect.Descriptor instead.
func (*GetTradeListReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{15}
}

func (x *GetTradeListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTradeListReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *GetTradeListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetTradeListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TradeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeList  []byte `protobuf:"bytes,1,opt,name=trade_list,json=tradeList,proto3" json:"trade_list,omitempty"`
	TradeCount int32  `protobuf:"varint,2,opt,name=trade_count,json=tradeCount,proto3" json:"trade_count,omitempty"`
}

func (x *TradeListResp) Reset() {
	*x = TradeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeListResp) ProtoMessage() {}

func (x *TradeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeListResp.ProtoReflect.Descriptor instead.
func (*TradeListResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{16}
}

func (x *TradeListResp) GetTradeList() []byte {
	if x != nil {
		return x.TradeList
	}
	return nil
}

func (x *TradeListResp) GetTradeCount() int32 {
	if x != nil {
		return x.TradeCount
	}
	return 0
}

type ProfitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
}

func (x *ProfitReq) Reset() {
	*x = ProfitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfitReq) ProtoMessage() {}

func (x *ProfitReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfitReq.ProtoReflect.Descriptor instead.
func (*ProfitReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{17}
}

func (x *ProfitReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProfitReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

type ProfitRealTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfitList []byte `protobuf:"bytes,1,opt,name=profit_list,json=profitList,proto3" json:"profit_list,omitempty"`
}

func (x *ProfitRealTimeResp) Reset() {
	*x = ProfitRealTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfitRealTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfitRealTimeResp) ProtoMessage() {}

func (x *ProfitRealTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfitRealTimeResp.ProtoReflect.Descriptor instead.
func (*ProfitRealTimeResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{18}
}

func (x *ProfitRealTimeResp) GetProfitList() []byte {
	if x != nil {
		return x.ProfitList
	}
	return nil
}

type GetExchangePosReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *GetExchangePosReq) Reset() {
	*x = GetExchangePosReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangePosReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangePosReq) ProtoMessage() {}

func (x *GetExchangePosReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangePosReq.ProtoReflect.Descriptor instead.
func (*GetExchangePosReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{19}
}

func (x *GetExchangePosReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetExchangePosReq) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type GetStrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
}

func (x *GetStrategyReq) Reset() {
	*x = GetStrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyReq) ProtoMessage() {}

func (x *GetStrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyReq.ProtoReflect.Descriptor instead.
func (*GetStrategyReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{20}
}

func (x *GetStrategyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserStrategyListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserStrategyList []*UserStrategyWithRate `protobuf:"bytes,1,rep,name=user_strategy_list,json=userStrategyList,proto3" json:"user_strategy_list,omitempty"`
}

func (x *UserStrategyListResp) Reset() {
	*x = UserStrategyListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategyListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategyListResp) ProtoMessage() {}

func (x *UserStrategyListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategyListResp.ProtoReflect.Descriptor instead.
func (*UserStrategyListResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{21}
}

func (x *UserStrategyListResp) GetUserStrategyList() []*UserStrategyWithRate {
	if x != nil {
		return x.UserStrategyList
	}
	return nil
}

type SetUserStrategyApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	ApiKey     string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *SetUserStrategyApiReq) Reset() {
	*x = SetUserStrategyApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserStrategyApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserStrategyApiReq) ProtoMessage() {}

func (x *SetUserStrategyApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserStrategyApiReq.ProtoReflect.Descriptor instead.
func (*SetUserStrategyApiReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{22}
}

func (x *SetUserStrategyApiReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetUserStrategyApiReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *SetUserStrategyApiReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type UserStrategyDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
}

func (x *UserStrategyDetailReq) Reset() {
	*x = UserStrategyDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategyDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategyDetailReq) ProtoMessage() {}

func (x *UserStrategyDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategyDetailReq.ProtoReflect.Descriptor instead.
func (*UserStrategyDetailReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{23}
}

func (x *UserStrategyDetailReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStrategyDetailReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

type UserStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId       string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	ParentStrategyId int64  `protobuf:"varint,4,opt,name=parent_strategy_id,json=parentStrategyId,proto3" json:"parent_strategy_id,omitempty"`
	Platform         string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	ApiKey           string `protobuf:"bytes,6,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Balance          string `protobuf:"bytes,7,opt,name=balance,proto3" json:"balance,omitempty"`
	State            int32  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UserStrategy) Reset() {
	*x = UserStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategy) ProtoMessage() {}

func (x *UserStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategy.ProtoReflect.Descriptor instead.
func (*UserStrategy) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{24}
}

func (x *UserStrategy) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStrategy) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *UserStrategy) GetParentStrategyId() int64 {
	if x != nil {
		return x.ParentStrategyId
	}
	return 0
}

func (x *UserStrategy) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserStrategy) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *UserStrategy) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *UserStrategy) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type UserStrategyWithRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId       string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	ParentStrategyId int64  `protobuf:"varint,3,opt,name=parent_strategy_id,json=parentStrategyId,proto3" json:"parent_strategy_id,omitempty"`
	Platform         string `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	ApiKey           string `protobuf:"bytes,5,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Balance          string `protobuf:"bytes,6,opt,name=balance,proto3" json:"balance,omitempty"`
	State            int32  `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	RunAt            string `protobuf:"bytes,8,opt,name=run_at,json=runAt,proto3" json:"run_at,omitempty"`
	TotalProfit      string `protobuf:"bytes,9,opt,name=total_profit,json=totalProfit,proto3" json:"total_profit,omitempty"`
	RealizeProfit    string `protobuf:"bytes,10,opt,name=realize_profit,json=realizeProfit,proto3" json:"realize_profit,omitempty"`
	UnRealizeProfit  string `protobuf:"bytes,11,opt,name=un_realize_profit,json=unRealizeProfit,proto3" json:"un_realize_profit,omitempty"`
	RateReturnYear   string `protobuf:"bytes,12,opt,name=rate_return_year,json=rateReturnYear,proto3" json:"rate_return_year,omitempty"`
	Symbol           string `protobuf:"bytes,13,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *UserStrategyWithRate) Reset() {
	*x = UserStrategyWithRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategyWithRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategyWithRate) ProtoMessage() {}

func (x *UserStrategyWithRate) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategyWithRate.ProtoReflect.Descriptor instead.
func (*UserStrategyWithRate) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{25}
}

func (x *UserStrategyWithRate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStrategyWithRate) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *UserStrategyWithRate) GetParentStrategyId() int64 {
	if x != nil {
		return x.ParentStrategyId
	}
	return 0
}

func (x *UserStrategyWithRate) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserStrategyWithRate) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *UserStrategyWithRate) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *UserStrategyWithRate) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserStrategyWithRate) GetRunAt() string {
	if x != nil {
		return x.RunAt
	}
	return ""
}

func (x *UserStrategyWithRate) GetTotalProfit() string {
	if x != nil {
		return x.TotalProfit
	}
	return ""
}

func (x *UserStrategyWithRate) GetRealizeProfit() string {
	if x != nil {
		return x.RealizeProfit
	}
	return ""
}

func (x *UserStrategyWithRate) GetUnRealizeProfit() string {
	if x != nil {
		return x.UnRealizeProfit
	}
	return ""
}

func (x *UserStrategyWithRate) GetRateReturnYear() string {
	if x != nil {
		return x.RateReturnYear
	}
	return ""
}

func (x *UserStrategyWithRate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type StrategyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrategyList []byte `protobuf:"bytes,1,opt,name=strategy_list,json=strategyList,proto3" json:"strategy_list,omitempty"`
}

func (x *StrategyList) Reset() {
	*x = StrategyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyList) ProtoMessage() {}

func (x *StrategyList) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyList.ProtoReflect.Descriptor instead.
func (*StrategyList) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{26}
}

func (x *StrategyList) GetStrategyList() []byte {
	if x != nil {
		return x.StrategyList
	}
	return nil
}

type StrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *StrategyReq) Reset() {
	*x = StrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyReq) ProtoMessage() {}

func (x *StrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyReq.ProtoReflect.Descriptor instead.
func (*StrategyReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{27}
}

func (x *StrategyReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *StrategyReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SetUserStrategyBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string  `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string  `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Balance    float32 `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *SetUserStrategyBalanceReq) Reset() {
	*x = SetUserStrategyBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserStrategyBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserStrategyBalanceReq) ProtoMessage() {}

func (x *SetUserStrategyBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserStrategyBalanceReq.ProtoReflect.Descriptor instead.
func (*SetUserStrategyBalanceReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{28}
}

func (x *SetUserStrategyBalanceReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetUserStrategyBalanceReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *SetUserStrategyBalanceReq) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type GetStrategyDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStrategyDetail) Reset() {
	*x = GetStrategyDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStrategyDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyDetail) ProtoMessage() {}

func (x *GetStrategyDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyDetail.ProtoReflect.Descriptor instead.
func (*GetStrategyDetail) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{29}
}

func (x *GetStrategyDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Strategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag          string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Remark       string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ExchangeName string `protobuf:"bytes,5,opt,name=exchange_name,json=exchangeName,proto3" json:"exchange_name,omitempty"`
	ExchangeId   int64  `protobuf:"varint,6,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Level        int32  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	State        int32  `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Strategy) Reset() {
	*x = Strategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strategy) ProtoMessage() {}

func (x *Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strategy.ProtoReflect.Descriptor instead.
func (*Strategy) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{30}
}

func (x *Strategy) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Strategy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Strategy) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Strategy) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Strategy) GetExchangeName() string {
	if x != nil {
		return x.ExchangeName
	}
	return ""
}

func (x *Strategy) GetExchangeId() int64 {
	if x != nil {
		return x.ExchangeId
	}
	return 0
}

func (x *Strategy) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Strategy) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type CreateStrategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	Id      int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Balance float32 `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *CreateStrategyReq) Reset() {
	*x = CreateStrategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyReq) ProtoMessage() {}

func (x *CreateStrategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyReq.ProtoReflect.Descriptor instead.
func (*CreateStrategyReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{31}
}

func (x *CreateStrategyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateStrategyReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateStrategyReq) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type TradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId    string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	UserId     string                 `protobuf:"bytes,2,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ApiKey     string                 `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	OrderId    string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	StrategyId string                 `protobuf:"bytes,5,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Direction  string                 `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	Volume     string                 `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Commission string                 `protobuf:"bytes,8,opt,name=commission,proto3" json:"commission,omitempty"`
	Unit       string                 `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`
	Symbol     string                 `protobuf:"bytes,10,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price      string                 `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`
	TradeAt    *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=trade_at,json=tradeAt,proto3" json:"trade_at,omitempty"`
	Exchange   string                 `protobuf:"bytes,13,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *TradeReq) Reset() {
	*x = TradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReq) ProtoMessage() {}

func (x *TradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReq.ProtoReflect.Descriptor instead.
func (*TradeReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{32}
}

func (x *TradeReq) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TradeReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *TradeReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TradeReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *TradeReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *TradeReq) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *TradeReq) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

func (x *TradeReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *TradeReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeReq) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TradeReq) GetTradeAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TradeAt
	}
	return nil
}

func (x *TradeReq) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type OrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	ApiKey     string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	StrategyId string `protobuf:"bytes,5,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Volume     string `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Symbol     string `protobuf:"bytes,10,opt,name=symbol,proto3" json:"symbol,omitempty"`
	BuyPrice   string `protobuf:"bytes,11,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`    //买入价
	SellPrice  string `protobuf:"bytes,12,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"` //卖出价
	TradeAt    string `protobuf:"bytes,13,opt,name=trade_at,json=tradeAt,proto3" json:"trade_at,omitempty"`
	Exchange   string `protobuf:"bytes,14,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Unit       string `protobuf:"bytes,15,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *OrderReq) Reset() {
	*x = OrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReq) ProtoMessage() {}

func (x *OrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReq.ProtoReflect.Descriptor instead.
func (*OrderReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{33}
}

func (x *OrderReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *OrderReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *OrderReq) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *OrderReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderReq) GetBuyPrice() string {
	if x != nil {
		return x.BuyPrice
	}
	return ""
}

func (x *OrderReq) GetSellPrice() string {
	if x != nil {
		return x.SellPrice
	}
	return ""
}

func (x *OrderReq) GetTradeAt() string {
	if x != nil {
		return x.TradeAt
	}
	return ""
}

func (x *OrderReq) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *OrderReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ExchangePos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Balance   string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Available string `protobuf:"bytes,3,opt,name=available,proto3" json:"available,omitempty"`
	Frozen    string `protobuf:"bytes,4,opt,name=frozen,proto3" json:"frozen,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Price     string `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	TotalUsdt string `protobuf:"bytes,7,opt,name=total_usdt,json=totalUsdt,proto3" json:"total_usdt,omitempty"`
}

func (x *ExchangePos) Reset() {
	*x = ExchangePos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangePos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangePos) ProtoMessage() {}

func (x *ExchangePos) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangePos.ProtoReflect.Descriptor instead.
func (*ExchangePos) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{34}
}

func (x *ExchangePos) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ExchangePos) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *ExchangePos) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ExchangePos) GetFrozen() string {
	if x != nil {
		return x.Frozen
	}
	return ""
}

func (x *ExchangePos) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExchangePos) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ExchangePos) GetTotalUsdt() string {
	if x != nil {
		return x.TotalUsdt
	}
	return ""
}

type ExchangePosResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangePos []*ExchangePos `protobuf:"bytes,1,rep,name=exchange_pos,json=exchangePos,proto3" json:"exchange_pos,omitempty"`
}

func (x *ExchangePosResp) Reset() {
	*x = ExchangePosResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangePosResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangePosResp) ProtoMessage() {}

func (x *ExchangePosResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangePosResp.ProtoReflect.Descriptor instead.
func (*ExchangePosResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{35}
}

func (x *ExchangePosResp) GetExchangePos() []*ExchangePos {
	if x != nil {
		return x.ExchangePos
	}
	return nil
}

type UserStrategyRunReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=user_id,proto3" json:"user_id,omitempty"`
	StrategyId string `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
}

func (x *UserStrategyRunReq) Reset() {
	*x = UserStrategyRunReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategyRunReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategyRunReq) ProtoMessage() {}

func (x *UserStrategyRunReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategyRunReq.ProtoReflect.Descriptor instead.
func (*UserStrategyRunReq) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{36}
}

func (x *UserStrategyRunReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStrategyRunReq) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

type EvaDaily struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	ProfitDaily string `protobuf:"bytes,2,opt,name=profit_daily,json=profitDaily,proto3" json:"profit_daily,omitempty"`
}

func (x *EvaDaily) Reset() {
	*x = EvaDaily{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaDaily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaDaily) ProtoMessage() {}

func (x *EvaDaily) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaDaily.ProtoReflect.Descriptor instead.
func (*EvaDaily) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{37}
}

func (x *EvaDaily) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *EvaDaily) GetProfitDaily() string {
	if x != nil {
		return x.ProfitDaily
	}
	return ""
}

type UserStrategyEvaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealizeProfit  string      `protobuf:"bytes,1,opt,name=realize_profit,json=realizeProfit,proto3" json:"realize_profit,omitempty"`
	RateReturnYear string      `protobuf:"bytes,2,opt,name=rate_return_year,json=rateReturnYear,proto3" json:"rate_return_year,omitempty"`
	RateReturn     string      `protobuf:"bytes,3,opt,name=rate_return,json=rateReturn,proto3" json:"rate_return,omitempty"`
	EvaDailyList   []*EvaDaily `protobuf:"bytes,4,rep,name=eva_daily_list,json=evaDailyList,proto3" json:"eva_daily_list,omitempty"`
}

func (x *UserStrategyEvaResp) Reset() {
	*x = UserStrategyEvaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_exchange_v1_exchange_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStrategyEvaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStrategyEvaResp) ProtoMessage() {}

func (x *UserStrategyEvaResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_exchange_v1_exchange_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStrategyEvaResp.ProtoReflect.Descriptor instead.
func (*UserStrategyEvaResp) Descriptor() ([]byte, []int) {
	return file_api_exchange_v1_exchange_proto_rawDescGZIP(), []int{38}
}

func (x *UserStrategyEvaResp) GetRealizeProfit() string {
	if x != nil {
		return x.RealizeProfit
	}
	return ""
}

func (x *UserStrategyEvaResp) GetRateReturnYear() string {
	if x != nil {
		return x.RateReturnYear
	}
	return ""
}

func (x *UserStrategyEvaResp) GetRateReturn() string {
	if x != nil {
		return x.RateReturn
	}
	return ""
}

func (x *UserStrategyEvaResp) GetEvaDailyList() []*EvaDaily {
	if x != nil {
		return x.EvaDailyList
	}
	return nil
}

var File_api_exchange_v1_exchange_proto protoreflect.FileDescriptor

var file_api_exchange_v1_exchange_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x54, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x0e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x51,
	0x0a, 0x1a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x61, 0x74, 0x65, 0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x66, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x06,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x07,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x45, 0x78, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70,
	0x69, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64,
	0x22, 0x26, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x09, 0x45, 0x78, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x41, 0x70,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x6b, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x51, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb2, 0x03, 0x0a, 0x14, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x75, 0x6e, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x52,
	0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x33,
	0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6f, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xca, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x56, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x64, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x74, 0x22, 0x52, 0x0a, 0x0f, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73,
	0x52, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x22, 0x4e, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x22, 0x41, 0x0a,
	0x08, 0x45, 0x76, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x22, 0xc8, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x45, 0x76, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x3f, 0x0a, 0x0e, 0x65, 0x76,
	0x61, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x0c, 0x65,
	0x76, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xd0, 0x0a, 0x0a, 0x07,
	0x45, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x45, 0x78, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x70, 0x69, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x69,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x6f, 0x74, 0x12,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x45, 0x76, 0x61, 0x12, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x45, 0x76, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x41,
	0x6c, 0x6c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x18, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x32,
	0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x50, 0x01, 0x5a, 0x1d, 0x66, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x2d, 0x62, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_exchange_v1_exchange_proto_rawDescOnce sync.Once
	file_api_exchange_v1_exchange_proto_rawDescData = file_api_exchange_v1_exchange_proto_rawDesc
)

func file_api_exchange_v1_exchange_proto_rawDescGZIP() []byte {
	file_api_exchange_v1_exchange_proto_rawDescOnce.Do(func() {
		file_api_exchange_v1_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_exchange_v1_exchange_proto_rawDescData)
	})
	return file_api_exchange_v1_exchange_proto_rawDescData
}

var file_api_exchange_v1_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_api_exchange_v1_exchange_proto_goTypes = []interface{}{
	(*StrategyProfitCompensateReq)(nil), // 0: api.exchange.v1.StrategyProfitCompensateReq
	(*SymbolWithRate)(nil),              // 1: api.exchange.v1.symbolWithRate
	(*SymbolRankWithRateYearResp)(nil),  // 2: api.exchange.v1.SymbolRankWithRateYearResp
	(*AssertsResp)(nil),                 // 3: api.exchange.v1.AssertsResp
	(*TradeSymbolReq)(nil),              // 4: api.exchange.v1.TradeSymbolReq
	(*Symbol)(nil),                      // 5: api.exchange.v1.Symbol
	(*GetSymbolsResp)(nil),              // 6: api.exchange.v1.GetSymbolsResp
	(*ExChangeList)(nil),                // 7: api.exchange.v1.ExChangeList
	(*UserApiReq)(nil),                  // 8: api.exchange.v1.UserApiReq
	(*UserApiKeyReq)(nil),               // 9: api.exchange.v1.UserApiKeyReq
	(*ExchangeApi)(nil),                 // 10: api.exchange.v1.ExchangeApi
	(*ExchangeApiResp)(nil),             // 11: api.exchange.v1.ExchangeApiResp
	(*UpdateExchangeApiReq)(nil),        // 12: api.exchange.v1.UpdateExchangeApiReq
	(*GetExApiReq)(nil),                 // 13: api.exchange.v1.GetExApiReq
	(*ExApiResp)(nil),                   // 14: api.exchange.v1.ExApiResp
	(*GetTradeListReq)(nil),             // 15: api.exchange.v1.GetTradeListReq
	(*TradeListResp)(nil),               // 16: api.exchange.v1.TradeListResp
	(*ProfitReq)(nil),                   // 17: api.exchange.v1.ProfitReq
	(*ProfitRealTimeResp)(nil),          // 18: api.exchange.v1.ProfitRealTimeResp
	(*GetExchangePosReq)(nil),           // 19: api.exchange.v1.GetExchangePosReq
	(*GetStrategyReq)(nil),              // 20: api.exchange.v1.GetStrategyReq
	(*UserStrategyListResp)(nil),        // 21: api.exchange.v1.UserStrategyListResp
	(*SetUserStrategyApiReq)(nil),       // 22: api.exchange.v1.SetUserStrategyApiReq
	(*UserStrategyDetailReq)(nil),       // 23: api.exchange.v1.UserStrategyDetailReq
	(*UserStrategy)(nil),                // 24: api.exchange.v1.UserStrategy
	(*UserStrategyWithRate)(nil),        // 25: api.exchange.v1.UserStrategyWithRate
	(*StrategyList)(nil),                // 26: api.exchange.v1.StrategyList
	(*StrategyReq)(nil),                 // 27: api.exchange.v1.StrategyReq
	(*SetUserStrategyBalanceReq)(nil),   // 28: api.exchange.v1.SetUserStrategyBalanceReq
	(*GetStrategyDetail)(nil),           // 29: api.exchange.v1.GetStrategyDetail
	(*Strategy)(nil),                    // 30: api.exchange.v1.Strategy
	(*CreateStrategyReq)(nil),           // 31: api.exchange.v1.CreateStrategyReq
	(*TradeReq)(nil),                    // 32: api.exchange.v1.TradeReq
	(*OrderReq)(nil),                    // 33: api.exchange.v1.OrderReq
	(*ExchangePos)(nil),                 // 34: api.exchange.v1.ExchangePos
	(*ExchangePosResp)(nil),             // 35: api.exchange.v1.ExchangePosResp
	(*UserStrategyRunReq)(nil),          // 36: api.exchange.v1.UserStrategyRunReq
	(*EvaDaily)(nil),                    // 37: api.exchange.v1.EvaDaily
	(*UserStrategyEvaResp)(nil),         // 38: api.exchange.v1.UserStrategyEvaResp
	(*timestamppb.Timestamp)(nil),       // 39: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 40: google.protobuf.Empty
}
var file_api_exchange_v1_exchange_proto_depIdxs = []int32{
	1,  // 0: api.exchange.v1.SymbolRankWithRateYearResp.data:type_name -> api.exchange.v1.symbolWithRate
	5,  // 1: api.exchange.v1.GetSymbolsResp.symbols:type_name -> api.exchange.v1.Symbol
	25, // 2: api.exchange.v1.UserStrategyListResp.user_strategy_list:type_name -> api.exchange.v1.UserStrategyWithRate
	39, // 3: api.exchange.v1.TradeReq.trade_at:type_name -> google.protobuf.Timestamp
	34, // 4: api.exchange.v1.ExchangePosResp.exchange_pos:type_name -> api.exchange.v1.ExchangePos
	37, // 5: api.exchange.v1.UserStrategyEvaResp.eva_daily_list:type_name -> api.exchange.v1.EvaDaily
	40, // 6: api.exchange.v1.ExOrder.ExChangeInfo:input_type -> google.protobuf.Empty
	10, // 7: api.exchange.v1.ExOrder.AddExchangeApi:input_type -> api.exchange.v1.ExchangeApi
	13, // 8: api.exchange.v1.ExOrder.GetExchangeApiList:input_type -> api.exchange.v1.GetExApiReq
	12, // 9: api.exchange.v1.ExOrder.UpdateExchangeApi:input_type -> api.exchange.v1.UpdateExchangeApiReq
	8,  // 10: api.exchange.v1.ExOrder.DeleteExchangeApi:input_type -> api.exchange.v1.UserApiReq
	15, // 11: api.exchange.v1.ExOrder.GetTradeList:input_type -> api.exchange.v1.GetTradeListReq
	17, // 12: api.exchange.v1.ExOrder.GetProfitRealTime:input_type -> api.exchange.v1.ProfitReq
	32, // 13: api.exchange.v1.ExOrder.Evaluation:input_type -> api.exchange.v1.TradeReq
	33, // 14: api.exchange.v1.ExOrder.EvaluationSpot:input_type -> api.exchange.v1.OrderReq
	19, // 15: api.exchange.v1.ExOrder.GetExchangePos:input_type -> api.exchange.v1.GetExchangePosReq
	4,  // 16: api.exchange.v1.ExOrder.GetTradeSymbols:input_type -> api.exchange.v1.TradeSymbolReq
	23, // 17: api.exchange.v1.ExOrder.GetUserStrategyEva:input_type -> api.exchange.v1.UserStrategyDetailReq
	9,  // 18: api.exchange.v1.ExOrder.GetApiKeyInfo:input_type -> api.exchange.v1.UserApiKeyReq
	13, // 19: api.exchange.v1.ExOrder.GetAssetsByAllApiKey:input_type -> api.exchange.v1.GetExApiReq
	40, // 20: api.exchange.v1.ExOrder.GetSymbolRankWithRateYear:input_type -> google.protobuf.Empty
	0,  // 21: api.exchange.v1.ExOrder.StrategyProfitCompensate:input_type -> api.exchange.v1.StrategyProfitCompensateReq
	7,  // 22: api.exchange.v1.ExOrder.ExChangeInfo:output_type -> api.exchange.v1.ExChangeList
	40, // 23: api.exchange.v1.ExOrder.AddExchangeApi:output_type -> google.protobuf.Empty
	14, // 24: api.exchange.v1.ExOrder.GetExchangeApiList:output_type -> api.exchange.v1.ExApiResp
	40, // 25: api.exchange.v1.ExOrder.UpdateExchangeApi:output_type -> google.protobuf.Empty
	40, // 26: api.exchange.v1.ExOrder.DeleteExchangeApi:output_type -> google.protobuf.Empty
	16, // 27: api.exchange.v1.ExOrder.GetTradeList:output_type -> api.exchange.v1.TradeListResp
	18, // 28: api.exchange.v1.ExOrder.GetProfitRealTime:output_type -> api.exchange.v1.ProfitRealTimeResp
	40, // 29: api.exchange.v1.ExOrder.Evaluation:output_type -> google.protobuf.Empty
	40, // 30: api.exchange.v1.ExOrder.EvaluationSpot:output_type -> google.protobuf.Empty
	35, // 31: api.exchange.v1.ExOrder.GetExchangePos:output_type -> api.exchange.v1.ExchangePosResp
	6,  // 32: api.exchange.v1.ExOrder.GetTradeSymbols:output_type -> api.exchange.v1.GetSymbolsResp
	38, // 33: api.exchange.v1.ExOrder.GetUserStrategyEva:output_type -> api.exchange.v1.UserStrategyEvaResp
	11, // 34: api.exchange.v1.ExOrder.GetApiKeyInfo:output_type -> api.exchange.v1.ExchangeApiResp
	3,  // 35: api.exchange.v1.ExOrder.GetAssetsByAllApiKey:output_type -> api.exchange.v1.AssertsResp
	2,  // 36: api.exchange.v1.ExOrder.GetSymbolRankWithRateYear:output_type -> api.exchange.v1.SymbolRankWithRateYearResp
	40, // 37: api.exchange.v1.ExOrder.StrategyProfitCompensate:output_type -> google.protobuf.Empty
	22, // [22:38] is the sub-list for method output_type
	6,  // [6:22] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_exchange_v1_exchange_proto_init() }
func file_api_exchange_v1_exchange_proto_init() {
	if File_api_exchange_v1_exchange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_exchange_v1_exchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrategyProfitCompensateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolWithRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolRankWithRateYearResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssertsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeSymbolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSymbolsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExChangeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserApiKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeApiResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExchangeApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExApiResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfitRealTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangePosReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategyListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserStrategyApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategyDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategyWithRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrategyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserStrategyBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStrategyDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStrategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangePos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangePosResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategyRunReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaDaily); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_exchange_v1_exchange_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStrategyEvaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_exchange_v1_exchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_exchange_v1_exchange_proto_goTypes,
		DependencyIndexes: file_api_exchange_v1_exchange_proto_depIdxs,
		MessageInfos:      file_api_exchange_v1_exchange_proto_msgTypes,
	}.Build()
	File_api_exchange_v1_exchange_proto = out.File
	file_api_exchange_v1_exchange_proto_rawDesc = nil
	file_api_exchange_v1_exchange_proto_goTypes = nil
	file_api_exchange_v1_exchange_proto_depIdxs = nil
}
